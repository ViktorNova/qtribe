#############################################################################
# Makefile for building: ../bin/qtribe
# Generated by qmake (2.01a) (Qt 4.8.6) on: Fri Jul 25 14:14:46 2014
# Project:  src.pro
# Template: app
# Command: /usr/bin/qmake-qt4 -o Makefile src.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_NO_DEBUG -DQT_QT3SUPPORT_LIB -DQT3_SUPPORT -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_REENTRANT -Wall -W $(DEFINES)
CXXFLAGS      = -pipe -march=x86-64 -mtune=generic -O2 -pipe -fstack-protector --param=ssp-buffer-size=4 -D_REENTRANT -Wall -W $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/Qt3Support -I/usr/include/qt4 -I. -I.
LINK          = g++
LFLAGS        = -Wl,-O1,--sort-common,--as-needed,-z,relro -Wl,-O1
LIBS          = $(SUBLIBS)  -L/usr/lib -ljack -lQt3Support -lQtGui -lQtCore -lpthread 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake-qt4
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = strip
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = qtribe.cpp \
		main.cpp \
		jackIO.cpp \
		sequencerCore.cpp \
		stepSequence.cpp \
		stepsequencerwidget.cpp moc_qtribe.cpp \
		moc_stepsequencerwidget.cpp \
		stepsequencerwidgetbase.cpp \
		moc_stepsequencerwidgetbase.cpp
OBJECTS       = qtribe.o \
		main.o \
		jackIO.o \
		sequencerCore.o \
		stepSequence.o \
		stepsequencerwidget.o \
		moc_qtribe.o \
		moc_stepsequencerwidget.o \
		stepsequencerwidgetbase.o \
		moc_stepsequencerwidgetbase.o
DIST          = /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		src.pro
QMAKE_TARGET  = qtribe
DESTDIR       = ../bin/
TARGET        = ../bin/qtribe

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	@$(CHK_DIR_EXISTS) ../bin/ || $(MKDIR) ../bin/ 
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: src.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/common/gcc-base.conf \
		/usr/share/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/share/qt4/mkspecs/common/g++-base.conf \
		/usr/share/qt4/mkspecs/common/g++-unix.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/modules/qt_phonon.pri \
		/usr/share/qt4/mkspecs/modules/qt_webkit.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/release.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/shared.prf \
		/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/share/qt4/mkspecs/features/include_source_dir.prf \
		/usr/lib/libQt3Support.prl \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -o Makefile src.pro
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/common/gcc-base.conf:
/usr/share/qt4/mkspecs/common/gcc-base-unix.conf:
/usr/share/qt4/mkspecs/common/g++-base.conf:
/usr/share/qt4/mkspecs/common/g++-unix.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/modules/qt_phonon.pri:
/usr/share/qt4/mkspecs/modules/qt_webkit.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/release.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/shared.prf:
/usr/share/qt4/mkspecs/features/unix/gdb_dwarf_index.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/share/qt4/mkspecs/features/include_source_dir.prf:
/usr/lib/libQt3Support.prl:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -o Makefile src.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/qtribe1.0.0 || $(MKDIR) .tmp/qtribe1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/qtribe1.0.0/ && $(COPY_FILE) --parents qtribe.h jackIO.h sequencerCore.h stepSequence.h stepsequencerwidget.h .tmp/qtribe1.0.0/ && $(COPY_FILE) --parents qtribe.cpp main.cpp jackIO.cpp sequencerCore.cpp stepSequence.cpp stepsequencerwidget.cpp .tmp/qtribe1.0.0/ && $(COPY_FILE) --parents stepsequencerwidgetbase.ui .tmp/qtribe1.0.0/ && $(COPY_FILE) --parents stepsequencerwidgetbase.ui .tmp/qtribe1.0.0/ && $(COPY_FILE) --parents stepsequencerwidgetbase.h .tmp/qtribe1.0.0/ && (cd `dirname .tmp/qtribe1.0.0` && $(TAR) qtribe1.0.0.tar qtribe1.0.0 && $(COMPRESS) qtribe1.0.0.tar) && $(MOVE) `dirname .tmp/qtribe1.0.0`/qtribe1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/qtribe1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: moc_qtribe.cpp moc_stepsequencerwidget.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) moc_qtribe.cpp moc_stepsequencerwidget.cpp
moc_qtribe.cpp: sequencerCore.h \
		stepSequence.h \
		qtribe.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) qtribe.h -o moc_qtribe.cpp

moc_stepsequencerwidget.cpp: stepsequencerwidgetbase.h \
		qtribe.h \
		sequencerCore.h \
		stepSequence.h \
		stepsequencerwidget.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) stepsequencerwidget.h -o moc_stepsequencerwidget.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_uic3_decl_make_all: stepsequencerwidgetbase.h
compiler_uic3_decl_clean:
	-$(DEL_FILE) stepsequencerwidgetbase.h
stepsequencerwidgetbase.h: stepsequencerwidgetbase.ui
	/usr/lib/qt4/bin/uic3 stepsequencerwidgetbase.ui -o stepsequencerwidgetbase.h

compiler_uic3_impl_make_all: stepsequencerwidgetbase.cpp
compiler_uic3_impl_clean:
	-$(DEL_FILE) stepsequencerwidgetbase.cpp
stepsequencerwidgetbase.cpp: stepsequencerwidgetbase.ui \
		stepsequencerwidgetbase.h
	/usr/lib/qt4/bin/uic3 -impl stepsequencerwidgetbase.h stepsequencerwidgetbase.ui -o stepsequencerwidgetbase.cpp

compiler_uic3_moc_make_all: moc_stepsequencerwidgetbase.cpp
compiler_uic3_moc_clean:
	-$(DEL_FILE) moc_stepsequencerwidgetbase.cpp
moc_stepsequencerwidgetbase.cpp: stepsequencerwidgetbase.h \
		stepsequencerwidgetbase.h
	/usr/lib/qt4/bin/moc $(DEFINES) $(INCPATH) stepsequencerwidgetbase.h -o moc_stepsequencerwidgetbase.cpp

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_uic3_decl_clean compiler_uic3_impl_clean compiler_uic3_moc_clean 

####### Compile

qtribe.o: qtribe.cpp qtribe.h \
		sequencerCore.h \
		stepSequence.h \
		stepsequencerwidget.h \
		stepsequencerwidgetbase.h \
		jackIO.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o qtribe.o qtribe.cpp

main.o: main.cpp qtribe.h \
		sequencerCore.h \
		stepSequence.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

jackIO.o: jackIO.cpp jackIO.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o jackIO.o jackIO.cpp

sequencerCore.o: sequencerCore.cpp sequencerCore.h \
		stepSequence.h \
		stepsequencerwidget.h \
		stepsequencerwidgetbase.h \
		qtribe.h \
		jackIO.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o sequencerCore.o sequencerCore.cpp

stepSequence.o: stepSequence.cpp stepSequence.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stepSequence.o stepSequence.cpp

stepsequencerwidget.o: stepsequencerwidget.cpp stepsequencerwidget.h \
		stepsequencerwidgetbase.h \
		qtribe.h \
		sequencerCore.h \
		stepSequence.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stepsequencerwidget.o stepsequencerwidget.cpp

moc_qtribe.o: moc_qtribe.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_qtribe.o moc_qtribe.cpp

moc_stepsequencerwidget.o: moc_stepsequencerwidget.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_stepsequencerwidget.o moc_stepsequencerwidget.cpp

stepsequencerwidgetbase.o: stepsequencerwidgetbase.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o stepsequencerwidgetbase.o stepsequencerwidgetbase.cpp

moc_stepsequencerwidgetbase.o: moc_stepsequencerwidgetbase.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o moc_stepsequencerwidgetbase.o moc_stepsequencerwidgetbase.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

